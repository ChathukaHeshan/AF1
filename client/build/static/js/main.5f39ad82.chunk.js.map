{"version":3,"sources":["components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/Sections/SupervisorReg.js","components/views/RegisterPage/Sections/StudentReg.js","components/views/RegisterPage/Sections/PanelmemberReg.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/AddTopicPage/UploadTopicPage.js","components/views/AddGroupPage/UploadGroupPage.js","components/views/AddDocumentPage/UploadDocumentPage.js","components/views/RequestSupervisorPage/RequestSupervisorPage.js","components/views/AddMarkingPage/UploadMarkingPage.js","components/views/AddSchemePage/UploadSchemePage.js","components/views/AddTemplatePage/UploadTemplatePage.js","components/views/MarkingsPage/MarkingsPage.js","components/views/SchemesPage/SchemesPage.js","components/views/TemplatesPage/TemplatesPage.js","components/views/ViewTopicPage/ViewTopicPage.js","components/views/ViewGroupPage/ViewGroupPage.js","components/views/ViewDocumentPage/ViewDocumentPage.js","components/views/ViewRequestSupervisorPage/ViewRequestSupervisorPage.js","components/views/ApproveTopics/ApproveTopics.js","components/views/ApproveRequestsupervisors/ApproveRequestsupervisors.js","components/views/ApproveGroups/ApproveGroups.js","components/views/ApproveDocuments/ApproveDocuments.js","components/views/ApproveResearches/ApproveResearches.js","components/views/DownloadablePage/DownloadablePage.js","components/App.js","index.js"],"names":["Date","getTime","LandingPage","props","id","className","src","alt","Component","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","useState","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","remember","initialUname","initialValues","username","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","axios","post","then","response","data","success","setItem","user","_id","isAdmin","isPanelmember","isPaid","isStudent","isSupervisor","removeItem","history","push","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","style","width","Item","prefix","type","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","checked","href","float","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","options","label","title","setTitle","email","userName","name","confirmPassword","contactno","university","department","oneOf","contactNumber","console","log","alert","hasValue","setValue","hasFeedback","validateStatus","onClick","RegisterPage","regType","setRegType","Group","e","target","optionType","defaultValue","Button","SubMenu","Menu","LeftMenu","userType","mode","logoutHandler","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","TextArea","Input","UploadTopicPage","TitleValue","setTitleValue","DescriptionValue","setDescriptionValue","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","event","preventDefault","variables","topic","description","proposal","students","isApproved","formData","FormData","append","config","headers","Axios","error","message","backgroundColor","maxWidth","margin","textAlign","marginBottom","files","currentTarget","UploadGroupPage","presenters","UploadDocumentPage","RequestSupervisorPage","UploadMarkingPage","link","author","UploadSchemePage","UploadTemplatePage","Text","markings","setMarkings","useEffect","get","downloadFile","download","length","map","item","index","DownloadOutlined","strong","schemes","setSchemes","templates","setTemplates","topics","setTopics","groups","setGroups","documents","setDocuments","requestsupervisors","setRequestsupervisors","ApproveTopics","state","wr","setState","prevProps","prevState","approval","submit","approve","put","scope","this","approveTopic","class","ApproveRequestsupervisors","approveRequestsupervisor","ApproveGroups","approveGroup","ApproveDocuments","approveDocument","ApproveResearches","researches","it","approveResearches","DownloadablePage","Downloads","downloads","url","App","fallback","paddingTop","minHeight","exact","path","component","LoginPage","MarkingsPage","SchemesPage","TemplatesPage","ViewTopicPage","ViewGroupPage","ViewDocumentPage","ViewRequestSupervisorPage","ApproveResearch","DownloadPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f39ad82.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport Text from \"antd/es/typography/Text\";\nimport ('../../../index.css')\n\n\nconst targetTime = new Date().getTime() + 4000000;\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <header id='header'>\n                        <div className='intro'>\n                            <div className='overlay'>\n                                <div className='container'>\n                                    <div className='row'>\n                                        <div className='col-md-8 col-md-offset-2 intro-text'>\n                                            <div className='headerTop'>\n                                                \n                                                <span></span>\n                                            </div>\n                                            <p >\n                                                \n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                </div>\n\n                <div id='about'>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-xs-12 col-md-6'>\n                                {' '}\n                                <img src='img/about.jpg' className='img-responsive' alt='' />{' '}\n                            </div>\n                            <div className='col-xs-12 col-md-6'>\n                                <div className='about-text'>\n                                    <br/>\n                                    <h2>About Us</h2>\n                                    <p>Manage your Research work here.Communicate with Our Supervisors and Get in touch with Panel Members! Make sure to keep track of your Marks, and Improve your experience..</p>\n                                    <h2>Discover Research</h2>\n                                    <p>Stay up to date with the progress of your Research. Reach Maximum heights by discovering your Coding Skills</p>\n                                    <h2>Measure your Impact</h2>\n                                    <p>Get in-depth stats on who's been supervising your work and keep track of your citations.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport axios from \"axios\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\");\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    let remember = \"false\";\n    if(rememberMe)\n      remember = \"true\";\n\n    setRememberMe(remember);\n  };\n\n  let initialUname = null;\n\n  if(rememberMe === \"true\")\n    initialUname = localStorage.getItem('username');\n\n  return (\n    <Formik\n      initialValues={{\n        username: initialUname,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .required('Username is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            username: values.username,\n            password: values.password\n          };\n\n          axios.post('/api/user/login',dataToSubmit)\n            .then(response => {\n              if (response.data.success) {\n                localStorage.setItem('userid', response.data.user._id);\n                localStorage.setItem('username', response.data.user.username);\n                if(response.data.user.isAdmin)\n                  localStorage.setItem('userType', \"admin\");\n                else if(response.data.user.isPanelmember)\n                  localStorage.setItem('userType', \"panelmember\");\n                else if(response.data.user.isPaid)\n                  localStorage.setItem('panelmemberPaid', \"paid\");\n                else if(response.data.user.isStudent)\n                  localStorage.setItem('userType', \"student\");\n                else if(response.data.user.isSupervisor)\n                localStorage.setItem('userType', \"supervisor\");\n                if (rememberMe === true) {\n                  localStorage.setItem('rememberMe', \"true\");\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"username\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your username\"\n                  type=\"text\"\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.username && touched.username ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.username && touched.username && (\n                  <div className=\"input-feedback\">{errors.username}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React, {useState} from \"react\";\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { withRouter } from 'react-router';\n\nimport {\n    Form,\n    Input,\n    Button,\n} from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst options = [\n    { value: 'Mr', label: 'Mr' },\n    { value: 'Mrs', label: 'Mrs' },\n    { value: 'Dr', label: 'Dr' },\n    { value: 'Prof', label: 'Prof' }\n]\n\nfunction SupervisorReg(props) {\n\n    const [title,setTitle] = useState('');\n\n    return (\n\n        <Formik\n            initialValues={{\n                title: '',\n                email: '',\n                userName: '',\n                name: '',\n                password: '',\n                confirmPassword: '',\n                contactno: '',\n                university:'',\n                department:''\n            }}\n            validationSchema={Yup.object().shape({\n                name: Yup.string()\n                    .required('Name is required'),\n                userName: Yup.string()\n                    .required('Last Name is required'),\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string()\n                    .min(6, 'Password must be at least 6 characters')\n                    .required('Password is required'),\n                confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                    .required('Confirm Password is required'),\n                contactno: Yup.string()\n                    .required('Contact number is required'),\n                university: Yup.string()\n                    .required('University is required'),\n                department: Yup.string()\n                    .required('Department is required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n\n                    let dataToSubmit = {\n                        email: values.email,\n                        password: values.password,\n                        name: values.name,\n                        title: title.value,\n                        username: values.userName,\n                        contactNumber: values.contactno,\n                        university: values.university,\n                        department: values.department,\n                        isSupervisor: true\n                    };\n\n                    console.log(dataToSubmit);\n\n                    axios.post('/api/user/', dataToSubmit)\n                        .then(response =>\n                        {\n                            if( response.data.success){\n                                props.history.push(\"/login\");\n                                alert('success');\n                            }else{\n                                alert(\"Error while registering user\");\n                            }\n                        }).\n                    catch(err => {\n                        console.log(err);\n                    });\n\n                    setSubmitting(false);\n                }, 500);\n            }}\n        >\n            {props => {\n                const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    handleReset,\n                } = props;\n                return (\n                    <div className=\"container\">\n                        <br/>\n                        {/*<h2>Supervisor Sign up</h2>*/}\n                        <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n                            <Form.Item required label=\"Title\">\n                                <Select\n                                    id=\"title\"\n                                    options = {options}\n                                    hasValue\n                                    setValue={values.title}\n                                    onBlur={handleBlur}\n                                    className = \"basic-multi-select\"\n                                    onChange={setTitle}\n                                    className={\n                                        errors.title && touched.title ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.title && touched.title && (\n                                    <div className=\"input-feedback\">{errors.title}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Name\">\n                                <Input\n                                    id=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.name && touched.name ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.name && touched.name && (\n                                    <div className=\"input-feedback\">{errors.name}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Username\">\n                                <Input\n                                    id=\"userName\"\n                                    placeholder=\"Enter your Username\"\n                                    type=\"text\"\n                                    value={values.userName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.userName && touched.userName ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.userName && touched.userName && (\n                                    <div className=\"input-feedback\">{errors.userName}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"email\"\n                                    placeholder=\"Enter your Email\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.email && touched.email ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password && touched.password ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Confirm Password\" hasFeedback>\n                                <Input\n                                    id=\"confirmPassword\"\n                                    placeholder=\"Re-Enter your Password\"\n                                    type=\"password\"\n                                    value={values.confirmPassword}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.confirmPassword && touched.confirmPassword && (\n                                    <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Contact Number\">\n                                {<Input\n                                    id=\"contactno\"\n                                    placeholder=\"Enter contact number\"\n                                    type=\"number\"\n                                    value={values.contactno}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.contactno && touched.contactno ? 'text-input error' : 'text-input'\n                                    }\n                                />}\n                                {errors.contactno && touched.contactno && (\n                                    <div className=\"input-feedback\">{errors.contactno}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"University\">\n                                <Input\n                                    id=\"university\"\n                                    placeholder=\"Enter university\"\n                                    type=\"text\"\n                                    value={values.university}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.university && touched.university ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.university && touched.university && (\n                                    <div className=\"input-feedback\">{errors.university}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Department\">\n                                <Input\n                                    id=\"department\"\n                                    placeholder=\"Enter department\"\n                                    type=\"text\"\n                                    value={values.department}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.department && touched.department ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.department && touched.department && (\n                                    <div className=\"input-feedback\">{errors.department}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default withRouter(SupervisorReg);\n","import React, {useState} from \"react\";\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\n\nimport {\n    Form,\n    Input,\n    Button,\n} from 'antd';\nimport {withRouter} from \"react-router\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst options = [\n    { value: 'Mr', label: 'Mr' },\n    { value: 'Mrs', label: 'Mrs' },\n    { value: 'Dr', label: 'Dr' },\n    { value: 'Prof', label: 'Prof' }\n]\n\nfunction StudentReg(props) {\n\n    const [title,setTitle] = useState('');\n\n    return (\n\n        <Formik\n            initialValues={{\n                title: '',\n                email: '',\n                userName: '',\n                name: '',\n                password: '',\n                confirmPassword: '',\n                contactno: '',\n                university:'',\n                department:''\n            }}\n            validationSchema={Yup.object().shape({\n                name: Yup.string()\n                    .required('Name is required'),\n                userName: Yup.string()\n                    .required('Last Name is required'),\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string()\n                    .min(6, 'Password must be at least 6 characters')\n                    .required('Password is required'),\n                confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                    .required('Confirm Password is required'),\n                contactno: Yup.string()\n                    .required('Contact number is required'),\n                university: Yup.string()\n                    .required('University is required'),\n                department: Yup.string()\n                    .required('Department is required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n\n                    let dataToSubmit = {\n                        title: title.value,\n                        name: values.name,\n                        username: values.userName,\n                        password: values.password,\n                        email: values.email,\n                        contactNumber: values.contactno,\n                        university: values.university,\n                        department: values.department,\n                        isStudent: true\n                    };\n\n                    console.log(dataToSubmit);\n\n                    axios.post('/api/user/', dataToSubmit)\n                        .then(response =>\n                        {\n                            if( response.data.success){\n                                props.history.push(\"/login\");\n                                alert('success');\n                            }else{\n                                alert(\"Error while registering user\");\n                            }\n                        }).\n                    catch(err => {\n                        console.log(err);\n                    });\n\n                    setSubmitting(false);\n                }, 500);\n            }}\n        >\n            {props => {\n                const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    handleReset,\n                } = props;\n                return (\n                    <div className=\"container\">\n                        <br/>\n                        <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n                            <Form.Item required label=\"Title\">\n                                <Select\n                                    id=\"title\"\n                                    options = {options}\n                                    hasValue\n                                    setValue={values.title}\n                                    onBlur={handleBlur}\n                                    className = \"basic-multi-select\"\n                                    onChange={setTitle}\n                                    className={\n                                        errors.title && touched.title ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.title && touched.title && (\n                                    <div className=\"input-feedback\">{errors.title}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Name\">\n                                <Input\n                                    id=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.name && touched.name ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.name && touched.name && (\n                                    <div className=\"input-feedback\">{errors.name}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Username\">\n                                <Input\n                                    id=\"userName\"\n                                    placeholder=\"Enter your Username\"\n                                    type=\"text\"\n                                    value={values.userName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.userName && touched.userName ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.userName && touched.userName && (\n                                    <div className=\"input-feedback\">{errors.userName}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"email\"\n                                    placeholder=\"Enter your Email\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.email && touched.email ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password && touched.password ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Confirm Password\" hasFeedback>\n                                <Input\n                                    id=\"confirmPassword\"\n                                    placeholder=\"Re-Enter your Password\"\n                                    type=\"password\"\n                                    value={values.confirmPassword}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.confirmPassword && touched.confirmPassword && (\n                                    <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Contact Number\">\n                                {<Input\n                                    id=\"contactno\"\n                                    placeholder=\"Enter contact number\"\n                                    type=\"number\"\n                                    value={values.contactno}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.contactno && touched.contactno ? 'text-input error' : 'text-input'\n                                    }\n                                />}\n                                {errors.contactno && touched.contactno && (\n                                    <div className=\"input-feedback\">{errors.contactno}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"University\">\n                                <Input\n                                    id=\"university\"\n                                    placeholder=\"Enter university\"\n                                    type=\"text\"\n                                    value={values.university}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.university && touched.university ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.university && touched.university && (\n                                    <div className=\"input-feedback\">{errors.university}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Department\">\n                                <Input\n                                    id=\"department\"\n                                    placeholder=\"Enter department\"\n                                    type=\"text\"\n                                    value={values.department}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.department && touched.department ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.department && touched.department && (\n                                    <div className=\"input-feedback\">{errors.department}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default withRouter(StudentReg);\n","import React, {useState} from \"react\";\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { withRouter } from 'react-router';\nimport axios from \"axios\";\n\nimport {\n    Form,\n    Input,\n    Button,\n} from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst options = [\n    { value: 'Mr', label: 'Mr' },\n    { value: 'Mrs', label: 'Mrs' },\n    { value: 'Dr', label: 'Dr' },\n    { value: 'Prof', label: 'Prof' }\n]\n\nfunction PanelmemberReg(props) {\n    const [title,setTitle] = useState('');\n\n    return (\n\n        <Formik\n            initialValues={{\n                title: '',\n                email: '',\n                userName: '',\n                name: '',\n                password: '',\n                confirmPassword: '',\n                contactno: ''\n            }}\n            validationSchema={Yup.object().shape({\n                name: Yup.string()\n                    .required('Name is required'),\n                userName: Yup.string()\n                    .required('Last Name is required'),\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string()\n                    .min(6, 'Password must be at least 6 characters')\n                    .required('Password is required'),\n                confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                    .required('Confirm Password is required'),\n                contactno: Yup.string()\n                    .required('Contact number is required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n\n                    let dataToSubmit = {\n                        email: values.email,\n                        password: values.password,\n                        name: values.name,\n                        title: title.value,\n                        username: values.userName,\n                        contactNumber: values.contactno,\n                        isPanelmember: true,\n                        isPaid: false\n                    };\n\n                    console.log(dataToSubmit);\n\n                    axios.post('/api/user/', dataToSubmit)\n                        .then(response =>\n                        {\n                            if( response.data.success){\n                                console.log(props);\n                                props.history.push(\"/login\");\n                                alert('success');\n                            }else{\n                                alert(\"Error while registering user\");\n                            }\n                        }).\n                    catch(err => {\n                        console.log(err);\n                    });\n\n                    setSubmitting(false);\n                }, 500);\n            }}\n        >\n            {props => {\n                const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    handleReset,\n                } = props;\n                return (\n                    <div className=\"container\">\n                        <br/>\n                        {/*<h2>supervisor Sign up</h2>*/}\n                        <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n                            <Form.Item required label=\"Title\">\n                                <Select\n                                    id=\"title\"\n                                    options = {options}\n                                    hasValue\n                                    setValue={values.title}\n                                    onBlur={handleBlur}\n                                    className = \"basic-multi-select\"\n                                    onChange={setTitle}\n                                    className={\n                                        errors.title && touched.title ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.title && touched.title && (\n                                    <div className=\"input-feedback\">{errors.title}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Name\">\n                                <Input\n                                    id=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.name && touched.name ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.name && touched.name && (\n                                    <div className=\"input-feedback\">{errors.name}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Username\">\n                                <Input\n                                    id=\"userName\"\n                                    placeholder=\"Enter your Username\"\n                                    type=\"text\"\n                                    value={values.userName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.userName && touched.userName ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.userName && touched.userName && (\n                                    <div className=\"input-feedback\">{errors.userName}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"email\"\n                                    placeholder=\"Enter your Email\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.email && touched.email ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">{errors.email}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password && touched.password ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Confirm Password\" hasFeedback>\n                                <Input\n                                    id=\"confirmPassword\"\n                                    placeholder=\"Re-Enter your Password\"\n                                    type=\"password\"\n                                    value={values.confirmPassword}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.confirmPassword && touched.confirmPassword && (\n                                    <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Contact Number\">\n                                {<Input\n                                    id=\"contactno\"\n                                    placeholder=\"Enter contact number\"\n                                    type=\"number\"\n                                    value={values.contactno}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.contactno && touched.contactno ? 'text-input error' : 'text-input'\n                                    }\n                                />}\n                                {errors.contactno && touched.contactno && (\n                                    <div className=\"input-feedback\">{errors.contactno}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default withRouter(PanelmemberReg);\n","import React, {useState} from \"react\";\nimport {Radio } from \"antd\";\nimport SupervisorReg from \"./Sections/SupervisorReg\";\nimport StudentReg from \"./Sections/StudentReg\"\nimport PanelmemberReg from \"./Sections/PanelmemberReg\"\n\nfunction RegisterPage(props) {\n\n    const [regType,setRegType] = useState(0);\n\n    const onChange = e => {\n        console.log('radio checked', e.target.value);\n        setRegType(e.target.value);\n    };\n\n    return (\n        <div className=\"app\">\n            <h2>Sign Up</h2>\n            <Radio.Group\n                /*options={options}*/\n                onChange={onChange}\n                value={regType}\n                optionType=\"button\"\n                defaultValue=\"0\"\n                /*buttonStyle=\"solid\"*/\n            >\n                <Radio.Button value=\"0\">Supervisor</Radio.Button>\n                <Radio.Button value=\"1\">Studentr</Radio.Button>\n                <Radio.Button value=\"2\">Panel Member</Radio.Button>\n            </Radio.Group>\n\n            { regType==\"0\"  ?\n                <>\n                    <SupervisorReg/>\n                </>\n\n                : null }\n            { regType==\"1\"  ?\n                <>\n                    <StudentReg/>\n                </>\n\n                : null }\n            { regType==\"2\"  ?\n                <>\n                    <PanelmemberReg/>\n                </>\n\n                : null }\n\n        </div>\n    );\n};\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\n\nfunction LeftMenu(props) {\n  const userType = localStorage.getItem('userType');\n\n  if (userType === \"admin\") {\n      console.log(userType);\n    return (\n        <Menu mode={props.mode}>\n          <Menu.Item key=\"mail\">\n            <a href=\"/\">Home</a>\n          </Menu.Item>\n\n          <SubMenu key=\"topic\" title=\"Topics\">\n            <Menu.Item key=\"topics\">\n              <a href=\"/topics\">Topics</a>\n            </Menu.Item>\n           \n          </SubMenu>\n\n          <SubMenu key=\"marking\" title=\"Supervisors\">\n            <Menu.Item key=\"markings\">\n              <a href=\"/markings\">Markings</a>\n            </Menu.Item>\n           \n          </SubMenu>\n\n          <Menu.Item key=\"downloads\">\n            <a href=\"/downloads\">Downloads</a>\n          </Menu.Item>\n\n          <SubMenu key=\"moderate\" title=\"Moderate\">\n            <Menu.Item key=\"editConf\">\n              <a href=\"/conferenceEdit\">Edit Conference Details</a>\n            </Menu.Item>\n            <Menu.Item key=\"appConf\">\n              <a href=\"/conferenceReview\">Approve Conference Details</a>\n            </Menu.Item>\n            <Menu.Item key=\"review\">\n              <a href=\"/reviewResearches\">Review Papers</a>\n            </Menu.Item>\n            <Menu.Item key=\"uploadtemplate\">\n              <a href=\"/uploadTemplate\">Upload Template</a>\n            </Menu.Item>\n            <Menu.Item key=\"uploadschemee\">\n              <a href=\"/uploadScheme\">Upload Marking Scheme</a>\n            </Menu.Item>\n            <Menu.Item key=\"adddocument\">\n                    <a href=\"/uploadDocument\">Submission Types</a>\n                </Menu.Item>\n              {/* <Menu.Item key=\"reviewwr\">\n                  <a href=\"/reviewTopics\">Review Topicps</a>\n              </Menu.Item> */}\n          </SubMenu>\n        </Menu>\n    )\n  \n  }else if(userType === \"panelmember\") {\n      console.log(userType);\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"mail\">\n                <a href=\"/\">Home</a>\n            </Menu.Item>\n\n            {/* <SubMenu key=\"topic\" title=\"Topics\">\n                <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item>\n            </SubMenu> */}\n            <SubMenu key=\"topic\" title=\"Student Details\">\n                <Menu.Item key=\"groups\">\n                    <a href=\"/groups\">Groups</a>\n                </Menu.Item>\n                <Menu.Item key=\"documents\">\n                    <a href=\"/documents\">View Documents</a>\n                </Menu.Item>\n                <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item>\n               \n            </SubMenu>\n           \n\n            <SubMenu key=\"marking\" title=\"Supervisors\">\n                <Menu.Item key=\"markings\">\n                    <a href=\"/markings\">Markings</a>\n                </Menu.Item>\n            </SubMenu>\n            \n            <SubMenu key=\"panell\" title=\"Panel\">\n                <Menu.Item key=\"reviewwr\">\n                    <a href=\"/reviewTopics\">Evaluate Topics</a>\n                </Menu.Item>\n                <Menu.Item key=\"addTopic\">\n                    <a href=\"/uploadMarking\">Add Marking Scheme</a>\n                </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"downloads\" title=\"Downloads\">\n            <Menu.Item key=\"schemes\">\n                <a href=\"/schemes\">Marking Scheme</a>\n            </Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n  }else if(userType === \"student\") {\n      console.log(userType);\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"mail\">\n                <a href=\"/\">Home</a>\n            </Menu.Item>\n\n            <SubMenu key=\"topic\" title=\"Student Details\">\n                <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item>\n                <Menu.Item key=\"addTopic\">\n                    <a href=\"/uploadTopic\">Request Topics</a>\n                </Menu.Item>\n                <Menu.Item key=\"addgroup\">\n                    <a href=\"/uploadGroup\">Add group</a>\n                </Menu.Item>\n                <Menu.Item key=\"groups\">\n                    <a href=\"/groups\">Groups</a>\n                </Menu.Item>\n                 <Menu.Item key=\"requestsupervisors\">\n                    <a href=\"/uploadRequestsupervisor\">Request Supervisor</a>\n                </Menu.Item>\n                <Menu.Item key=\"adddocument\">\n                    <a href=\"/uploadDocument\">Submit Documents</a>\n                </Menu.Item>\n                <Menu.Item key=\"markings\">\n                    <a href=\"/markings\">Markings</a>\n                </Menu.Item>\n            </SubMenu>\n\n            {/* <SubMenu key=\"marking\" title=\"Supervisors\">\n                <Menu.Item key=\"markings\">\n                    <a href=\"/markings\">Markings</a>\n                </Menu.Item>\n            </SubMenu> */}\n            <SubMenu key=\"downloads\" title=\"Downloads\">\n            <Menu.Item key=\"templates\">\n                <a href=\"/templates\">Templates</a>\n            </Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n  }else if(userType === \"supervisor\") {\n      console.log(userType);\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"mail\">\n                <a href=\"/\">Home</a>\n            </Menu.Item>\n\n            <SubMenu key=\"topic\" title=\"Student Details\">\n                <Menu.Item key=\"groups\">\n                    <a href=\"/groups\">Groups</a>\n                </Menu.Item>\n                <Menu.Item key=\"documents\">\n                    <a href=\"/documents\">View Documents</a>\n                </Menu.Item>\n                <Menu.Item key=\"markings\">\n                    <a href=\"/markings\">Markings</a>\n                </Menu.Item>\n               \n            </SubMenu>\n\n            <SubMenu key=\"marking\" title=\"Supervisor\">\n               \n                <Menu.Item key=\"addTopic\">\n                    <a href=\"/uploadMarking\">Add Marking Scheme</a>\n                </Menu.Item>\n                \n                <Menu.Item key=\"reviewdocuments\">\n                    <a href=\"/reviewDocuments\">Approve Documents</a>\n                </Menu.Item>\n                <Menu.Item key=\"reviewrs\">\n                    <a href=\"/reviewRequestsupervisor\">Approve Requests</a>\n                </Menu.Item>\n               \n                {/* <Menu.Item key=\"topics\">\n                    <a href=\"/topics\"> Accept Topics</a>\n                </Menu.Item> */}\n               \n                {/* <Menu.Item key=\"review\">\n                    <a href=\"/reviewRequestsupervisors\">Review Requests</a>\n                </Menu.Item> */}\n            </SubMenu>\n\n            <SubMenu key=\"downloads\" title=\"Downloads\">\n            <Menu.Item key=\"templates\">\n                <a href=\"/templates\">Templates</a>\n            </Menu.Item>\n            <Menu.Item key=\"schemes\">\n                <a href=\"/schemes\">Marking Scheme</a>\n            </Menu.Item>\n            </SubMenu>\n        \n\n        </Menu>\n    )\n  }else{\n      console.log(userType);\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"mail\">\n                <a href=\"/\">Home</a>\n            </Menu.Item>\n\n            <SubMenu key=\"Student\" title=\"Student\">\n                {/* <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item> */}\n            </SubMenu>\n            <SubMenu key=\"Supervisor\" title=\"Supervisor\">\n                {/* <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item> */}\n            </SubMenu>\n            <SubMenu key=\"Panel\" title=\"Panel Member\">\n                {/* <Menu.Item key=\"topics\">\n                    <a href=\"/topics\">Topics</a>\n                </Menu.Item> */}\n            </SubMenu>\n\n           {/* <SubMenu key=\"paper\" title=\"Researches\">\n                <Menu.Item key=\"papers\">\n                    <a href=\"/papers\">Research Papers</a>\n                </Menu.Item>\n            </SubMenu> */}\n\n        </Menu>\n    )\n  }\n}\n\nexport default LeftMenu\n\n","import React from 'react';\nimport { Menu } from 'antd';\nimport { withRouter } from 'react-router-dom';\n\nfunction RightMenu(props) {\n  const userType = localStorage.getItem('userType');\n\n  const logoutHandler = () => {\n    localStorage.removeItem('userType');\n    localStorage.removeItem('userid');\n    if(localStorage.getItem('rememberMe') === \"false\")\n        localStorage.removeItem('username');\n    props.history.push(\"/login\");\n  };\n\n  if(userType === \"admin\"){\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else if(userType === \"reviewer\"){\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else if(userType === \"editor\"){\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else if(userType === \"panelmember\"){\n      return(\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else if(userType === \"student\"){\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else if(userType === \"supervisor\"){\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"signout\">\n                  <a onClick={logoutHandler}>Sign Out</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }else{\n      return (\n          <Menu mode={props.mode}>\n              <Menu.Item key=\"mail\">\n                  <a href=\"/login\">Signin</a>\n              </Menu.Item>\n              <Menu.Item key=\"app\">\n                  <a href=\"/register\">Signup</a>\n              </Menu.Item>\n          </Menu>\n      )\n  }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">SLIIT </a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> © 2022 SLIIT - All right reserved{/*<Icon type=\"smile\" />*/}</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { Typography, Button, Form, Input } from 'antd';\nimport Axios from 'axios';\nconst { Title } = Typography;\nconst { TextArea } = Input;\nfunction UploadTopicPage(props) {\n\n    const [TitleValue, setTitleValue] = useState(\"\");\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\n    const [selectedFile, setSelectedFile] = useState();\n    const [isFilePicked, setIsFilePicked] = useState(false);\n    const fileChangeHandler = (event) => {\n\n        setSelectedFile(event.target.files[0]);\n        setIsFilePicked(true);\n    };\n    const onTitleChange = (event) => {\n        setTitleValue(event.currentTarget.value)\n    }\n\n    const onDescriptionChange = (event) => {\n        setDescriptionValue(event.currentTarget.value)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\n            return alert('fill all the fields first!')\n        }\n\n        const variables = {\n            topic: TitleValue,\n            description: DescriptionValue,\n            proposal: selectedFile.name,\n            students: localStorage.getItem('userid'),\n            isApproved: false\n        }\n\n\n        const formData = new FormData();\n        formData.append('file',selectedFile);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n\n        Axios.post('/api/topic', variables)\n            .then(response => {\n                Axios.post(\"/api/topic/uploadFile\",formData,config)\n                    .then(() => {\n                        if (response.data.success) {\n                            alert('topic Successfully Uploaded')\n                            props.history.push('/')\n                        } else {\n                            alert('Failed to upload topic')\n                        }\n\n                    }).catch((error) => {\n                    alert(error.message);\n                });\n            })\n\n    }\n\n    return (\n        <div style={{backgroundColor: '#E6E6FA'}}>\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Add topic </Title>\n            </div>\n            <Form onSubmit={onSubmit} >\n                <label>Add topic proposal</label>\n                <Input\n                    type={\"file\"}\n                    name=\"file\"\n                    onChange={fileChangeHandler}\n                />\n                <br />\n                <br />\n                <label>topic Title</label>\n                <Input\n                    onChange={onTitleChange}\n                    value={TitleValue}\n                />\n                <br />\n                <br />\n                <label>Description</label>\n                <TextArea\n                    onChange={onDescriptionChange}\n                    value={DescriptionValue}\n                />\n                <br />\n                <br />\n                <Button\n                    onClick={onSubmit}\n                >\n                    Submit\n                </Button>\n            </Form>\n        </div>\n        </div>\n    )\n}\n\nexport default UploadTopicPage;\n","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport Axios from 'axios';\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nfunction UploadGroupPage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\");\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const fileChangeHandler = (event) => {\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n    };\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            topic: TitleValue,\r\n            description: DescriptionValue,\r\n            proposal: selectedFile.name,\r\n            presenters: localStorage.getItem('userid'),\r\n            isApproved: false\r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',selectedFile);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        Axios.post('/api/group', variables)\r\n            .then(response => {\r\n                Axios.post(\"/api/group/uploadFile\",formData,config)\r\n                    .then(() => {\r\n                        if (response.data.success) {\r\n                            alert('group Successfully Uploaded')\r\n                            props.history.push('/')\r\n                        } else {\r\n                            alert('Failed to upload group')\r\n                        }\r\n\r\n                    }).catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#E6E6FA'}}>\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Add Group </Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit} >\r\n                <label>Add Group Details</label>\r\n                <Input\r\n                    type={\"file\"}\r\n                    name=\"file\"\r\n                    onChange={fileChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Group Name</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadGroupPage;","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport Axios from 'axios';\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nfunction UploadDocumentPage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\");\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const fileChangeHandler = (event) => {\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n    };\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            topic: TitleValue,\r\n            description: DescriptionValue,\r\n            proposal: selectedFile.name,\r\n            presenters: localStorage.getItem('userid'),\r\n            isApproved: false\r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',selectedFile);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        Axios.post('/api/document', variables)\r\n            .then(response => {\r\n                Axios.post(\"/api/document/uploadFile\",formData,config)\r\n                    .then(() => {\r\n                        if (response.data.success) {\r\n                            alert('document Successfully Uploaded')\r\n                            props.history.push('/')\r\n                        } else {\r\n                            alert('Failed to upload document')\r\n                        }\r\n\r\n                    }).catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#E6E6FA'}}>\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Add Document </Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit} >\r\n                <label>Add Document Details</label>\r\n                <Input\r\n                    type={\"file\"}\r\n                    name=\"file\"\r\n                    onChange={fileChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Document Type</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Leaders ID</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadDocumentPage;","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport Axios from 'axios';\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nfunction RequestSupervisorPage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\");\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const fileChangeHandler = (event) => {\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n    };\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            topic: TitleValue,\r\n            description: DescriptionValue,\r\n            proposal: selectedFile.name,\r\n            presenters: localStorage.getItem('userid'),\r\n            isApproved: false\r\n            \r\n        }\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',selectedFile);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        Axios.post('/api/requestsupervisor', variables)\r\n            .then(response => {\r\n                Axios.post(\"/api/uploadFile\",formData,config)\r\n                    .then(() => {\r\n                        if (response.data.success) {\r\n                            alert('request Successfully sent')\r\n                            props.history.push('/')\r\n                        } else {\r\n                            alert('Failed to send request')\r\n                        }\r\n\r\n                    }).catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#E6E6FA'}}>\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Request Supervisors </Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit} >\r\n                <label>Add Request Details</label>\r\n                <Input\r\n                    type={\"file\"}\r\n                    name=\"file\"\r\n                    onChange={fileChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Supervisor Name</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Field of Interest</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestSupervisorPage;","import React, { useState } from 'react'\nimport { Typography, Button, Form, Input } from 'antd';\nimport Axios from 'axios';\n\nconst { Title } = Typography;\nconst { TextArea } = Input;\n\nfunction UploadMarkingPage(props) {\n\n    const [TitleValue, setTitleValue] = useState(\"\");\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [isFilePicked, setIsFilePicked] = useState(false);\n\n    const fileChangeHandler = (event) => {\n\n        setSelectedFile(event.target.files[0]);\n        setIsFilePicked(true);\n\n    };\n\n    const onTitleChange = (event) => {\n        setTitleValue(event.currentTarget.value)\n    }\n\n    const onDescriptionChange = (event) => {\n        setDescriptionValue(event.currentTarget.value)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\n            return alert('fill all the fields first!')\n        }\n\n        const variables = {\n            topic: TitleValue,\n            description: DescriptionValue,\n            link: selectedFile.name,\n            author: localStorage.getItem('userid'),\n            isApproved: false,\n            isPaid: false\n        }\n\n        const formData = new FormData();\n        formData.append('file',selectedFile);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n\n        Axios.post('/api/marking', variables)\n            .then(response => {\n                Axios.post(\"/api/marking/uploadFile\",formData,config)\n                    .then(() => {\n                        if (response.data.success) {\n                            alert('Marking Successfully Uploaded')\n                            props.history.push('/')\n                        } else {\n                            alert('Failed to upload Marking Paper')\n                        }\n\n                    }).catch((error) => {\n                    alert(error.message);\n                });\n\n            })\n\n    }\n\n    return (\n        <div style={{backgroundColor: '#F0FFF0'}}>\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Add Marking sheet </Title>\n            </div>\n\n            <Form onSubmit={onSubmit} >\n\n                <label>Add Marking Results</label>\n                <Input\n                    type={\"file\"}\n                    name=\"file\"\n                    onChange={fileChangeHandler}\n                />\n                <br />\n                <br />\n                <label>Evaluate Details</label>\n                <Input\n                    onChange={onTitleChange}\n                    value={TitleValue}\n                />\n                <br />\n                <br />\n                <label>Description</label>\n                <TextArea\n                    onChange={onDescriptionChange}\n                    value={DescriptionValue}\n                />\n                <br />\n                <br />\n\n                <Button\n                    onClick={onSubmit}\n                >\n                    Submit\n                </Button>\n\n            </Form>\n\n        </div>\n        </div>\n    )\n}\n\nexport default UploadMarkingPage;\n","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction UploadSchemePage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\");\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\r\n    const fileChangeHandler = (event) => {\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n\r\n    };\r\n\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            topic: TitleValue,\r\n            description: DescriptionValue,\r\n            link: selectedFile.name,\r\n            author: localStorage.getItem('userid'),\r\n            isApproved: false,\r\n            isPaid: false\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',selectedFile);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        Axios.post('/api/scheme', variables)\r\n            .then(response => {\r\n                Axios.post(\"/api/scheme/uploadFile\",formData,config)\r\n                    .then(() => {\r\n                        if (response.data.success) {\r\n                            alert('Marking Scheme Successfully Uploaded')\r\n                            props.history.push('/')\r\n                        } else {\r\n                            alert('Failed to upload Marking Scheme')\r\n                        }\r\n\r\n                    }).catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#F0F8FF'}}>\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Upload Marking Scheme </Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit} >\r\n\r\n                <label>Marking Scheme</label>\r\n                <Input\r\n                    type={\"file\"}\r\n                    name=\"file\"\r\n                    onChange={fileChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Catogery</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Details</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadSchemePage;","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction UploadTemplatePage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\");\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\r\n    const fileChangeHandler = (event) => {\r\n\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n\r\n    };\r\n\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!TitleValue || !DescriptionValue || !isFilePicked) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            topic: TitleValue,\r\n            description: DescriptionValue,\r\n            link: selectedFile.name,\r\n            author: localStorage.getItem('userid'),\r\n            isApproved: false,\r\n            isPaid: false\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',selectedFile);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        Axios.post('/api/template', variables)\r\n            .then(response => {\r\n                Axios.post(\"/api/template/uploadFile\",formData,config)\r\n                    .then(() => {\r\n                        if (response.data.success) {\r\n                            alert('Template Successfully Uploaded')\r\n                            props.history.push('/')\r\n                        } else {\r\n                            alert('Failed to upload the Template')\r\n                        }\r\n\r\n                    }).catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor: '#F0F8FF'}}>\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Add Template </Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit} >\r\n\r\n                <label>Add Template</label>\r\n                <Input\r\n                    type={\"file\"}\r\n                    name=\"file\"\r\n                    onChange={fileChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Template Type</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadTemplatePage;\r\n","import React,  {useEffect, useState, Fragment} from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport download from 'downloadjs';\nimport {Typography, Divider } from \"antd\";\nimport {DownloadOutlined} from '@ant-design/icons';\n\nconst { Title, Text } = Typography;\n\nfunction MarkingsPage(props){\n\n    const[markings,setMarkings] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/marking')\n            .then(response => {\n                console.log(response.data);\n                setMarkings(response.data.markings);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    },[])\n\n    const downloadFile = async(link) => {\n        console.log(link);\n        await axios.get(`/api/uploads/`+link)\n            .then(response => {\n                return download(response.data);\n            }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    return(\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Marks </Title>\n            </div>\n            {markings.length > 0 && markings.map((item,index) => (\n                <Fragment key={index}>\n                    <Divider />\n                    <Title level={4}>\n                        {item.topic}\n                    </Title>\n                    <p>\n                        {item.description}\n                    </p>\n                    <a>\n                        <DownloadOutlined onClick={() => downloadFile(item.link)}/>\n                    </a>\n                    <br/>\n                    <Text strong>\n                        {item.author != null && item.author.name}\n                    </Text>\n                </Fragment>\n            ))}\n\n        </div>\n    )\n}\n\nexport default withRouter(MarkingsPage);\n","import React,  {useEffect, useState, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport download from 'downloadjs';\r\nimport {Typography, Divider } from \"antd\";\r\nimport {DownloadOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction SchemesPage(props){\r\n\r\n    const[schemes,setSchemes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/scheme')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setSchemes(response.data.schemes);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },[])\r\n\r\n    const downloadFile = async(link) => {\r\n        console.log(link);\r\n        await axios.get(`/api/uploads/`+link)\r\n            .then(response => {\r\n                return download(response.data);\r\n            }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Marking Scheme </Title>\r\n            </div>\r\n            {schemes.length > 0 && schemes.map((item,index) => (\r\n                <Fragment key={index}>\r\n                    <Divider />\r\n                    <Title level={4}>\r\n                        {item.topic}\r\n                    </Title>\r\n                    <p>\r\n                        {item.description}\r\n                    </p>\r\n                    <a>\r\n                        <DownloadOutlined onClick={() => downloadFile(item.link)}/>\r\n                    </a>\r\n                    <br/>\r\n                    <Text strong>\r\n                        {item.author != null && item.author.name}\r\n                    </Text>\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SchemesPage);","import React,  {useEffect, useState, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport download from 'downloadjs';\r\nimport {Typography, Divider } from \"antd\";\r\nimport {DownloadOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction TemplatesPage(props){\r\n\r\n    const[templates,setTemplates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/template')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setTemplates(response.data.templates);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },[])\r\n\r\n    const downloadFile = async(link) => {\r\n        console.log(link);\r\n        await axios.get(`/api/uploads/`+link)\r\n            .then(response => {\r\n                return download(response.data);\r\n            }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Templates </Title>\r\n            </div>\r\n            {templates.length > 0 && templates.map((item,index) => (\r\n                <Fragment key={index}>\r\n                    <Divider />\r\n                    <Title level={4}>\r\n                        {item.topic}\r\n                    </Title>\r\n                    <p>\r\n                        {item.description}\r\n                    </p>\r\n                    <a>\r\n                        <DownloadOutlined onClick={() => downloadFile(item.link)}/>\r\n                    </a>\r\n                    <br/>\r\n                    <Text strong>\r\n                        {item.author != null && item.author.name}\r\n                    </Text>\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(TemplatesPage);","import React,  {useEffect, useState, Fragment} from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {Typography, Divider } from \"antd\";\nimport {DownloadOutlined} from '@ant-design/icons';\n\nconst { Title, Text } = Typography;\n\nfunction ViewTopicPage(props){\n\n    const[topics,setTopics] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/topic')\n            .then(response => {\n                console.log(response.data);\n                setTopics(response.data.topics);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    },[])\n\n\n    return(\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Topics </Title>\n            </div>\n            {topics.length > 0 && topics.map((item,index) => (\n                <Fragment key={index}>\n                    <Divider/>\n                    <Title level={4}>\n                        {item.topic}\n                    </Title>\n                    <p>\n                        {item.description}\n                    </p>\n                    <p>\n                        {item.students.name}\n                    </p>\n                    <br/>\n\n                </Fragment>\n            ))}\n\n        </div>\n    )\n}\n\nexport default withRouter(ViewTopicPage);\n","import React,  {useEffect, useState, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Typography, Divider } from \"antd\";\r\nimport {DownloadOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction ViewGroupPage(props){\r\n\r\n    const[groups,setGroups] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8070/group')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setGroups(response.data.groups);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Groups </Title>\r\n            </div>\r\n            {groups.length > 0 && groups.map((item,index) => (\r\n                <Fragment key={index}>\r\n                    <Divider/>\r\n                    <Title level={4}>\r\n                        {item.topic}\r\n                    </Title>\r\n                    <p>\r\n                        {item.description}\r\n                    </p>\r\n                    <p>\r\n                        {item.presenters.name}\r\n                    </p>\r\n                    <br/>\r\n\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewGroupPage);","import React,  {useEffect, useState, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Typography, Divider } from \"antd\";\r\nimport {DownloadOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction ViewDocumentPage(props){\r\n\r\n    const[documents,setDocuments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/document')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setDocuments(response.data.documents);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Documents </Title>\r\n            </div>\r\n            {documents.length > 0 && documents.map((item,index) => (\r\n                <Fragment key={index}>\r\n                    <Divider/>\r\n                    <Title level={4}>\r\n                        {item.topic}\r\n                    </Title>\r\n                    <p>\r\n                        {item.description}\r\n                    </p>\r\n                    <p>\r\n                        {item.presenters.name}\r\n                    </p>\r\n                    <br/>\r\n\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewDocumentPage);","import React,  {useEffect, useState, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Typography, Divider } from \"antd\";\r\nimport {DownloadOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction ViewRequestSupervisorPage(props){\r\n\r\n    const[requestsupervisors,setRequestSupervisors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/requestsupervisor')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setRequestsupervisors(response.data.requestsupervisors);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Request Supervisors </Title>\r\n            </div>\r\n            {requestsupervisors.length > 0 && requestsupervisors.map((item,index) => (\r\n                <Fragment key={index}>\r\n                    <Divider/>\r\n                    <Title level={4}>\r\n                        {item.topic}\r\n                    </Title>\r\n                    <p>\r\n                        {item.description}\r\n                    </p>\r\n                    <p>\r\n                        {item.presenters.name}\r\n                    </p>\r\n                    <br/>\r\n\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewRequestSupervisorPage);","import React, { Component } from 'react'\nimport axios from 'axios'\nimport download from \"downloadjs\";\n\nexport class ApproveTopics extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            topics:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8070/topic').then((response) =>{\n            console.log(response.data);\n            let wr=[];\n\n            response.data.topics.map((item) => {\n                if(!item.isApproved)\n                    wr.push(item);\n            })\n\n            this.setState({\n                topics: wr\n            })\n        }).catch(err => console.log(err))\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        axios.get('http://localhost:8070/topic').then((response) =>{\n            let wr=[];\n            response.data.topics.map((item) => {\n                if(!item.isApproved)\n                    wr.push(item);\n            })\n\n            this.setState({\n                topics: wr\n            })\n        }).catch(err => console.log(err))\n    }\n\n    async downloadFile(link){\n        console.log(link);\n        await axios.get(`http://localhost:8070/uploads/`+link)\n            .then(response => {\n                return download(response.data);\n            }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    approveTopic(id,approval){\n        const submit = {\n            id: id,\n            approve: approval\n        }\n\n        axios.put('http://localhost:8070/topic',submit).then(response => {\n            if(response.data.success){\n                alert(\"Success\");\n            }else{\n                console.log(response.data.error);\n            }\n        })\n    }\n\n    render() {\n\n        return (\n            <div style={{backgroundColor: '#FFFAF0'}}>\n            <table className=\"table table-hover\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Topic Title</th>\n                    <th scope=\"col\">Description</th>\n                    {/* <th scope=\"col\">Conductor</th> */}\n                    <th scope=\"col\">Proposal</th>\n                    <th scope=\"col\">Approval</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.topics.length>0 && this.state.topics.map((item,index) => (\n                    <tr key={index}>\n                        <td>{item.topic}</td>\n                        <td>{item.description}</td>\n                        {/* <td>{item.students}</td> */}\n                        <td><a href={'/api/uploads/'+item.proposal} target=\"_blank\" download={\"\"+item.proposal}>{item.proposal}</a></td>\n                        <td>\n                            <button className=\"btn btn-primary\" onClick={()=>this.approveTopic(item._id,true)}>Approve</button>\n                            <button class=\"btn btn-danger\" onClick={()=>this.approveTopic(item._id,false)}>Decline</button>\n                        </td>\n                    </tr>\n                ))}\n\n                </tbody>\n            </table>\n            </div>\n\n        );\n    }\n}\n\nexport default ApproveTopics;\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport download from \"downloadjs\";\r\n\r\nexport class ApproveRequestsupervisors extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            requestsupervisors:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/requestsupervisor').then((response) =>{\r\n            console.log(response.data);\r\n            let wr=[];\r\n\r\n            response.data.requestsupervisors.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                requestsupervisors: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        axios.get('/api/requestsupervisor').then((response) =>{\r\n            let wr=[];\r\n            response.data.requestsupervisors.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                requestsupervisors: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    async downloadFile(link){\r\n        console.log(link);\r\n        await axios.get(`/api/uploads/`+link)\r\n            .then(response => {\r\n                return download(response.data);\r\n            }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    approveRequestsupervisor(id,approval){\r\n        const submit = {\r\n            id: id,\r\n            approve: approval\r\n        }\r\n\r\n        axios.put('/api/requestsupervisor',submit).then(response => {\r\n            if(response.data.success){\r\n                alert(\"Success\");\r\n            }else{\r\n                console.log(response.data.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{backgroundColor: '#F0FFF0'}}>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Requested Supervisor</th>\r\n                    <th scope=\"col\">Field of Interest</th>\r\n                    {/* <th scope=\"col\">Conductor</th> */}\r\n                    <th scope=\"col\">Proposal</th>\r\n                    <th scope=\"col\">Approval</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.requestsupervisors.length>0 && this.state.requestsupervisors.map((item,index) => (\r\n                    <tr key={index}>\r\n                        <td>{item.topic}</td>\r\n                        <td>{item.description}</td>\r\n                        {/* <td>{item.presenters}</td> */}\r\n                        <td><a href={'/api/uploads/'+item.proposal} target=\"_blank\" download={\"\"+item.proposal}>{item.proposal}</a></td>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" onClick={()=>this.approveRequestsupervisor(item._id,true)}>Approve</button>\r\n                            <button class=\"btn btn-danger\" onClick={()=>this.approveRequestsupervisor(item._id,false)}>Decline</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApproveRequestsupervisors;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport download from \"downloadjs\";\r\n\r\nexport class ApproveGroups extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            groups:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/group').then((response) =>{\r\n            console.log(response.data);\r\n            let wr=[];\r\n\r\n            response.data.groups.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                groups: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        axios.get('/api/group').then((response) =>{\r\n            let wr=[];\r\n            response.data.groups.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                groups: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    async downloadFile(link){\r\n        console.log(link);\r\n        await axios.get(`/api/uploads/`+link)\r\n            .then(response => {\r\n                return download(response.data);\r\n            }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    approveGroup(id,approval){\r\n        const submit = {\r\n            id: id,\r\n            approve: approval\r\n        }\r\n\r\n        axios.put('/api/group',submit).then(response => {\r\n            if(response.data.success){\r\n                alert(\"Success\");\r\n            }else{\r\n                console.log(response.data.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Group Title</th>\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Conductor</th>\r\n                    <th scope=\"col\">Proposal</th>\r\n                    <th scope=\"col\">Approval</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.groups.length>0 && this.state.groups.map((item,index) => (\r\n                    <tr key={index}>\r\n                        <td>{item.topic}</td>\r\n                        <td>{item.description}</td>\r\n                        <td>{item.presenters}</td>\r\n                        <td><a onClick={() => this.downloadFile(item.proposal)}>{item.proposal}</a></td>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" onClick={()=>this.approveGroup(item._id,true)}>Approve</button>\r\n                            <button class=\"btn btn-danger\" onClick={()=>this.approveGroup(item._id,false)}>Decline</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApproveGroups;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport download from \"downloadjs\";\r\n\r\nexport class ApproveDocuments extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            documents:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/document').then((response) =>{\r\n            console.log(response.data);\r\n            let wr=[];\r\n\r\n            response.data.documents.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                documents: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        axios.get('/api/document').then((response) =>{\r\n            let wr=[];\r\n            response.data.documents.map((item) => {\r\n                if(!item.isApproved)\r\n                    wr.push(item);\r\n            })\r\n\r\n            this.setState({\r\n                documents: wr\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    async downloadFile(link){\r\n        console.log(link);\r\n        await axios.get(`/api/uploads/`+link)\r\n            .then(response => {\r\n                return download(response.data);\r\n            }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    approveDocument(id,approval){\r\n        const submit = {\r\n            id: id,\r\n            approve: approval\r\n        }\r\n\r\n        axios.put('/api/document',submit).then(response => {\r\n            if(response.data.success){\r\n                alert(\"Success\");\r\n            }else{\r\n                console.log(response.data.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{backgroundColor: '#F0FFF0'}}>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Document Title</th>\r\n                    <th scope=\"col\">Leaders ID</th>\r\n                    {/* <th scope=\"col\">Conductor</th> */}\r\n                    <th scope=\"col\">Document</th>\r\n                    <th scope=\"col\">Approval</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.documents.length>0 && this.state.documents.map((item,index) => (\r\n                    <tr key={index}>\r\n                        <td>{item.topic}</td>\r\n                        <td>{item.description}</td>\r\n                        {/* <td>{item.presenters}</td> */}\r\n                        <td><a href={'/api/uploads/'+item.proposal} target=\"_blank\" download={\"\"+item.proposal}>{item.proposal}</a></td>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" onClick={()=>this.approveDocument(item._id,true)}>Approve</button>\r\n                            <button class=\"btn btn-danger\" onClick={()=>this.approveDocument(item._id,false)}>Decline</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApproveDocuments;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport download from \"downloadjs\";\n\nexport class ApproveResearches extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            researches:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/marking').then((response) =>{\n            let wr=[];\n\n            response.data.markings.map((item) => {\n                if(!item.isApproved) {\n                    const it = {\n                        _id: item._id,\n                        topic: item.topic,\n                        author: item.author.name,\n                        description: item.description,\n                        link: item.link,\n                    }\n                    wr.push(it);\n                }\n            })\n\n            console.log(wr)\n\n            this.setState({\n                researches: wr\n            })\n    }).catch(err => console.log(err))\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        axios.get('/api/marking').then((response) =>{\n            let wr=[];\n            response.data.markings.map((item) => {\n                if(!item.isApproved) {\n                    const it = {\n                        _id: item._id,\n                        topic: item.topic,\n                        author: item.author.name,\n                        description: item.description,\n                        link: item.link,\n                    }\n                    wr.push(it);\n                }\n            })\n            this.setState({\n                researches: wr\n            })\n        }).catch(err => console.log(err))\n    }\n\n    async downloadFile(link){\n        console.log(link);\n        await axios.get(`http://localhost:8070/uploads/`+link)\n            .then(response => {\n                return download(response.data);\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    approveResearches(id,approval){\n        const submit = {\n            id: id,\n            approve: approval\n        }\n\n        console.log(submit);\n\n        axios.put('http://localhost:8070/marking/approve',submit).then(response => {\n            if(response.data.success){\n                alert(\"Success\");\n            }else{\n                console.log(response.data.error);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <table className=\"table table-hover\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Paper Name</th>\n                    <th scope=\"col\">Researcher Name</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Research paper</th>\n                    <th scope=\"col\">Approval</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.researches.length>0 && this.state.researches.map((item,index) => (\n                    <tr key={index}>\n                        <td>{item.topic}</td>\n                        <td>{item.author}</td>\n                        <td>{item.description}</td>\n                        <td><a onClick={() => this.downloadFile(item.link)}>{item.link}</a></td>\n                        <td>\n                            <button className=\"btn btn-primary\" onClick={() => this.approveResearches(item._id,true)}>Approve</button>\n                            <button class=\"btn btn-danger\" onClick={() => this.approveResearches(item._id,false)}>Decline</button>\n                        </td>\n                    </tr>\n                ))}\n\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default ApproveResearches;\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport download from \"downloadjs\";\nimport {Typography, Divider } from \"antd\";\n\nconst { Title } = Typography;\n\nclass DownloadablePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Downloads: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/download').then((response) =>{\n        console.log(response.data);\n        this.setState({\n            Downloads: response.data.downloads\n        })\n    }).catch(err => console.log(err))\n    }\n\n    async downloadFile(link) {\n        console.log(link);\n        await axios.get(`/api/uploads/`+link)\n            .then(response => {\n                return download(response.data);\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\nrender(){\n    return(\n        <div className=\"card text-center\">\n            <Title level={2}>\n                Downloads\n            </Title>\n            <br/>\n            <br/>\n            <div className=\"card-body\">\n                {this.state.Downloads.length>0 && this.state.Downloads.map((item,index) => (\n                    <div key={index}>\n                        <Divider/>\n                        <h5 className=\"card-title\">{item.name}</h5>\n                        <p className=\"card-text\">{item.description}</p>\n                        <button className=\"btn btn-primary\" onClick={() => this.downloadFile(item.url)}>Download</button>\n                        <br/>\n                        <br/>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n\n    );\n}\n\n}\n\nexport default DownloadablePage;\n","import React, {Suspense} from 'react';\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\n\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadTopicPage from \"./views/AddTopicPage/UploadTopicPage\";\nimport UploadGroupPage from \"./views/AddGroupPage/UploadGroupPage\";\nimport UploadDocumentPage from \"./views/AddDocumentPage/UploadDocumentPage\";\nimport RequestSupervisorPage from \"./views/RequestSupervisorPage/RequestSupervisorPage\";\nimport UploadMarkingPage from \"./views/AddMarkingPage/UploadMarkingPage\";\nimport UploadSchemePage from \"./views/AddSchemePage/UploadSchemePage\";\nimport UploadTemplatePage from \"./views/AddTemplatePage/UploadTemplatePage\";\nimport MarkingsPage from \"./views/MarkingsPage/MarkingsPage\";\nimport SchemesPage from \"./views/SchemesPage/SchemesPage\";\nimport TemplatesPage from \"./views/TemplatesPage/TemplatesPage\";\nimport ViewTopicPage from \"./views/ViewTopicPage/ViewTopicPage\";\nimport ViewGroupPage from \"./views/ViewGroupPage/ViewGroupPage\";\nimport ViewDocumentPage from \"./views/ViewDocumentPage/ViewDocumentPage\";\nimport ViewRequestSupervisorPage from \"./views/ViewRequestSupervisorPage/ViewRequestSupervisorPage\";\nimport ApproveTopics from \"./views/ApproveTopics/ApproveTopics\";\nimport ApproveRequestsupervisors from \"./views/ApproveRequestsupervisors/ApproveRequestsupervisors\";\nimport ApproveGroups from \"./views/ApproveGroups/ApproveGroups\";\nimport ApproveDocuments from \"./views/ApproveDocuments/ApproveDocuments\";\nimport ApproveResearch from \"./views/ApproveResearches/ApproveResearches\";\nimport DownloadPage from \"./views/DownloadablePage/DownloadablePage\";\n\n\nfunction App() {\n\n    return (\n        <Suspense fallback={(<div>Loading...</div>)}>\n            <BrowserRouter>\n                <NavBar />\n                {/*<section>*/}\n                <div style={{ paddingTop: '100px', minHeight: 'calc(100vh - 60px)' }}>\n                    <Switch >\n                        <Route exact path=\"/\" component={LandingPage} />\n                        <Route path=\"/login\" component={LoginPage} />\n                        <Route path=\"/register\" component={RegisterPage} />\n                        <Route path=\"/uploadTopic\" component={UploadTopicPage} />\n                        <Route path=\"/uploadGroup\" component={UploadGroupPage} />\n                        <Route path=\"/uploadDocument\" component={UploadDocumentPage} />\n                        <Route path=\"/uploadRequestsupervisor\" component={RequestSupervisorPage} />\n                        <Route path=\"/markings\" component={MarkingsPage} />\n                        <Route path=\"/schemes\" component={SchemesPage} />\n                        <Route path=\"/templates\" component={TemplatesPage} />\n                        <Route path=\"/topics\" component={ViewTopicPage} />\n                        <Route path=\"/groups\" component={ViewGroupPage} />\n                        <Route path=\"/documents\" component={ViewDocumentPage} />\n                        <Route path=\"/requestsupervisor\" component={ViewRequestSupervisorPage} />\n                        <Route path=\"/uploadMarking\" component={UploadMarkingPage} />\n                        <Route path=\"/uploadScheme\" component={UploadSchemePage} />\n                        <Route path=\"/uploadTemplate\" component={UploadTemplatePage} />\n                        <Route path=\"/reviewResearches\" component={ApproveResearch} />\n                        <Route path=\"/reviewTopics\" component={ApproveTopics} />\n                        <Route path=\"/reviewGroups\" component={ApproveGroups} />\n                        <Route path=\"/reviewDocuments\" component={ApproveDocuments} />\n                        <Route path=\"/reviewRequestsupervisor\" component={ApproveRequestsupervisors} />\n                        <Route path=\"/downloads\" component={DownloadPage} />\n                        \n                    </Switch>\n                    </div>\n                {/*</section>*/}\n            </BrowserRouter>\n          <Footer />\n        </Suspense>\n      );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}